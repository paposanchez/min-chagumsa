{
    "swagger": "2.0",
    "info": {
        "title": "This is my website cool API",
        "description": "Api description...",
        "termsOfService": "",
        "contact": {
            "email": "contact@mysite.com"
        },
        "license": {
            "name": "Private License",
            "url": "URL to the license"
        },
        "version": "1.0.0"
    },
    "basePath": "/",
    "schemes": [
        "http",
        "https"
    ],
    "paths": {
        "/posts/{board_id}/{page}/{num_post}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get all post in a board",
                "description": "This can only be done by the logged in user.",
                "operationId": "getPosts",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "board_id",
                        "in": "path",
                        "description": "Board Id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "page",
                        "in": "path",
                        "description": "Page Number",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "num_post",
                        "in": "path",
                        "description": "Post number of a request",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful"
                    }
                }
            }
        },
        "/post/{board_id}/{id}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get a post by id",
                "description": "",
                "operationId": "getPost",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "board_id",
                        "in": "path",
                        "description": "Board Id",
                        "required": true,
                        "type": "integer"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post Id",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "default": {
                        "description": "successful"
                    }
                }
            }
        },
        "/login": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Logs user into the system",
                "description": "",
                "operationId": "loginUser",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "The user name for login",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "password",
                        "in": "query",
                        "description": "The password for login in clear text",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "string"
                        },
                        "headers": {
                            "X-Rate-Limit": {
                                "description": "calls per hour allowed by the user",
                                "type": "integer",
                                "format": "int32"
                            },
                            "X-Expires-After": {
                                "description": "date in UTC when token expires",
                                "type": "string",
                                "format": "date-time"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid username/password supplied"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Logs out current logged in user session",
                "description": "",
                "operationId": "logoutUser",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "default": {
                        "description": "successful"
                    }
                }
            }
        },
        "/user/{user_id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get user by user id",
                "description": "",
                "operationId": "getUser",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "User id. ",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Invalid user id supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Updated user",
                "description": "This can only be done by the logged in user.",
                "operationId": "updateUser",
                "produces": [
                    "application/xml",
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "description": "name that need to be updated",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user",
                        "in": "body",
                        "description": "Updated user object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid user supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        }
    },
    "definitions": {},
    "externalDocs": {
        "description": "Find out more about my website",
        "url": "http..."
    }
}